# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet importget "Import Getx" b
import 'package:get/get.dart';
endsnippet

snippet importm "Import Material" b
import 'package:flutter/material.dart';
endsnippet


snippet getmain "Getx Main" b
import 'package:flutter/material.dart';
import 'package:get/get.dart';

void main() {
  runApp(
    GetMaterialApp(
      debugShowCheckedModeBanner: false,
      initialRoute: '/',
      theme: appThemeData,
      defaultTransition: Transition.fade,
      getPages: AppPages.pages,
      home: MyHomePage(),
    )
  );
}
endsnippet

snippet statelessCont "Description" b
import 'package:flutter/material.dart';

class ${1} extends StatelessWidget {
  const ${1}({Key key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Container(
      child: ${2:null},
    );
  }
}
endsnippet


snippet statelessSca "Description" b
import 'package:flutter/material.dart';

class ${1} extends StatelessWidget {
  const ${1}({Key key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: ${2:null},
    );
  }
}
endsnippet


snippet getcontrollervoid "getxcontroller void" b
import 'package:get/get.dart';

class ${1}controller extends getxcontroller {

}
endsnippet

snippet getcontroller "GetxController" b
import 'package:get/get.dart';

class ${1}Controller extends GetxController {
  final _obj = ''.obs;
  set obj(value) => this._obj.value = value;
  get obj => this._obj.value;
}
endsnippet

snippet tryc "tryc" b
try {${1}
} catch (e) {
  print(e);			
}
endsnippet

snippet getmodel "get model" b
class ${1:MyModel} {

  int id;
  String name;

  ${1:MyModel}({ id, name });

  ${1:MyModel}.fromJson(Map<String, dynamic> json){
      this.id = json['id'];
      this.name = json['name'];
  }

  Map<String, dynamic> toJson(){
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['name'] = this.name;
    return data;
  }
} 
endsnippet




snippet mateapp "Material App" b
import 'package:flutter/material.dart';
 
void main() => runApp(MyApp());
 
class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Material App',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Material App Bar'),
        ),
        body: Center(
          child: Container(
            child: Text('Hello World'),
          ),
        ),
      ),
    );
  }
}
endsnippet



